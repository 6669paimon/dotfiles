format = """
$username\
$hostname\
$directory\
$git_branch\
$git_state\
$git_status\
$git_commit\
$cmd_duration\
$line_break\
$python\
$character"""

[directory]
style = "bright-blue"

[character]
success_symbol = "[❯](bright-cyan)"
error_symbol = "[❯](red)"
vimcmd_symbol = "[❮](green)"

[git_branch]
format = "[$symbol$branch]($style)"
symbol = " "
style = "cyan"

[git_status]
# format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218) ($ahead_behind$stashed)]($style)"
format = "[ $all_status$ahead_behind]($style)"
style = "yellow"
conflicted = "="
ahead =	"⇡${count}"
behind = "⇣${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
up_to_date = " 󰄸 "
untracked = "?${count}"
stashed = ""
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = " ${count}"
# stashed = "≡"

[git_commit]
format = "[\\($hash\\)]($style) [\\($tag\\)]($style)"
style = "green"

# [git_state]
# format = '\([$state( $progress_current/$progress_total)]($style)\) '
# style = "bright-black"

[cmd_duration]
format = "[$duration]($style) "
style = "yellow"

[python]
symbol = " "
format = "[$virtualenv]($style) "
style = "bright-black"

[git_state]
rebase = "REBASING"
merge =	"MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style =	"yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '

# # SYMBOLS

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

# [directory]

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = " "

[elm]
symbol = " "

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[haskell]
symbol = "λ "

[memory_usage]
symbol = " "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

# [python]
# symbol = " "
# #pyenv_version_name = true
# format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
# style = "bold yellow"
# pyenv_prefix = "venv "
# python_binary = ["./venv/bin/python", "python", "python3", "python2"]
# detect_extensions = ["py"]
# version_format = "v${raw}"

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[nodejs]
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

# Other languages configurations:
c.disabled = true
cmake.disabled = true
haskell.disabled = true
python.disabled = true
ruby.disabled = true
rust.disabled = true
perl.disabled = true
package.disabled = true
lua.disabled = true
nodejs.disabled = true
java.disabled = true
golang.disabled = true
